
<script src="~/lib/jquery/dist/jquery.min.js"></script>



<button type="submit" class="btn btn-primary" id="btnNuevo"> Nuevo Pedido</button>


<div class="form-group">
	<label for="exampleInputEmail1">N PEDIDO</label>
	<input type="email" class="form-control" id="txtNroPedido">
</div>



<table id="tblpedidos" class="table table-striped" style="width:100%">
	<thead>
		<tr>
			<th></th>
			<th>Nro Pedido</th>
			<th>Fecha pedido</th>
			<th>Fecha recepcion</th>
			<th>Fecha despacho</th>
			<th>Fecha entrega</th>
			<th>Estado</th>
			<th></th>
			<th></th>
		</tr>
	</thead>
	<tbody id="tblpedidosbody">
	</tbody>
</table>



<div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="modalDetalle" >
	<div class="modal-dialog modal-lg">
		<div class="modal-content">

			<div class="col-md-12">
				<table id="tblpedidodet" class="table table-striped" style="width:100%">
					<thead>
						<tr>
							<th></th>
							<th>Sku</th>
							<th>Nombre</th>
							<th>Tipo</th>
							<th>Precio</th>
							<th>Unidad Medida</th>
						</tr>
					</thead>
					<tbody id="tblpedidodetbody">
					</tbody>
				</table>

			</div>


		</div>
	</div>
</div>



<script src="~/js/datatable/jquery.dataTables.js"></script>
<script src="~/js/datatable/dataTables.bootstrap.js"></script>
<script src="~/js/datatable/dataTables.tableTools.js"></script>
<script src="~/js/datatable/datatables-init.js"></script>


<script>


	let dataTable;
	let dataTableIsInitialized = false;
	const token = localStorage.getItem('token');
	const buttonnuevo = $('#btnNuevo')
	const NroPedido = $('#txtNroPedido')
	const modalDetalle = $('#modalDetalle')

	const dataTableOptions = {
		destroy: true,
		language: {
			paginate: {
				first: "Primero",
				last: "Último",
				next: "Siguiente",
				previous: "Anterior"
			}
		}
	};


	const initDataTable = async () => {
		if (dataTableIsInitialized) {
			dataTable.destroy();
		}

		await listPedidos();


		dataTable = $("#tblpedidos").DataTable(dataTableOptions);

		dataTableIsInitialized = true;
	};

	const parametros = {
		n_pedido: NroPedido.val(),
	};

	const listPedidos = async () => {
		try {

			const response = await fetch("http://localhost:5085/Pedido/listarpedido", {
				method: 'POST', // o 'POST' según lo que necesites
				headers: {
					'Authorization': `Bearer ${token}`, // Agrega el token al encabezado 'Authorization'
					'Content-Type': 'application/json' // Si es necesario especificar el tipo de contenido
				},
				body: JSON.stringify(parametros)
			});

			if (!response.ok) {
				throw new Error(`Error en la solicitud: ${response.statusText}`);
			}

			const pedidos = await response.json();

			let content = ``;
			pedidos.forEach((pe, index) => {
				content += `
									<tr>
										<td>${index + 1}</td>
															<td><a href="#" onclick="editarPedido(${pe.id_pedido})" >${pe.nro_pedido}</a></td>
															<td>${pe.fecha_pedido}</td>
															<td>${pe.fecha_recepcion}</td>
															<td>${pe.fecha_despacho}</td>
															<td>${pe.fecha_entrega}</td>
															<td>${pe.estado}</td>
										<td><i class="fa-solid fa-check" style="color: green;"></i></td>
										<td>
												   <button onclick="detallePedido(${pe.id_pedido})" class="btn btn-sm btn-primary"><i class="fa-solid fa-pencil"></i></button>
										</td>
									</tr>`;
			});


			 $('#tblpedidosbody').html(content);


		} catch (ex) {
			console.log(ex);
		}
	};


	window.addEventListener("load", async () => {
		await initDataTable();
	});

	function detallePedido(id_pedidox) 
	{
		CargarDetalle(id_pedidox);
		modalDetalle.modal("show");
	}


	async function CargarDetalle(id_pedidox) {

		var parametros = {
			id_pedido: parseInt(id_pedidox),
		};

		try {

			const response = await fetch("http://localhost:5085/Pedido/obtenerpedidodet", {
				method: 'POST',
				headers: {
					'Authorization': `Bearer ${token}`,
					'Content-Type': 'application/json'
				},
				body: JSON.stringify(parametros)
			});

			if (!response.ok) {
				throw new Error(`Error en la solicitud: ${response.statusText}`);
			}

			const productos = await response.json();

			let content = ``;
			productos.forEach((pro, index) => {
				content += `
										<tr>
											<td>${index + 1}</td>
												<td>${pro.sku}</td>
												<td>${pro.nombre}</td>
													<td>${pro.tipo}</td>
													<td>${pro.precio}</td>
													<td>${pro.uni_medida}</td>
										</tr>`;
			});


			$('#tblpedidodetbody').html(content);



		} catch (ex) {
			console.log(ex);
		}

	}


	function editarPedido(pedido) 
	{
		var url = '@Html.Raw(Url.Action("NuevoPedido", "Home", new { accion = "__id__", id_pedido = "__ic__" }))';
		window.location.href = url.replace('__id__', 2).replace('__ic__', pedido);
	}

	buttonnuevo.on('click', async () => {

		var url = '@Html.Raw(Url.Action("NuevoPedido", "Home", new { accion = "__id__", id_pedido = "__ic__"}))';
		window.location.href = url.replace('__id__', 1).replace('__ic__', 0)

	});

</script>