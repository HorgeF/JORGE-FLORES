@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@{
	ViewData["Title"] = "Home Page";
}


<script src="~/lib/jquery/dist/jquery.min.js"></script>

<div class="form-group">
	<label for="exampleInputEmail1">Nombre</label>
	<input type="email" class="form-control" id="txtNombre">
</div>

<div class="form-group">
	<label for="exampleInputEmail1">SKU</label>
	<input type="email" class="form-control" id="txtSKU">
</div>


<table id="tblproductos" class="table table-striped" style="width:100%">
	<thead>
		<tr>
			<th></th>
			<th>Sku</th>
			<th>Nombre</th>
			<th>Tipo</th>
			<th>Etiquetas</th>
			<th>Precio</th>
			<th>Unidad Medida</th>
			<th></th>
			<th></th>
		</tr>
	</thead>
	<tbody id="tblproductosbody">
	</tbody>
</table>


<script src="~/js/datatable/jquery.dataTables.js"></script>
<script src="~/js/datatable/dataTables.bootstrap.js"></script>
<script src="~/js/datatable/dataTables.tableTools.js"></script>
<script src="~/js/datatable/datatables-init.js"></script>

<script>


	let dataTable;
	let dataTableIsInitialized = false;
	const token = localStorage.getItem('token');
	const nombre = $('#txtNombre')
	const sku = $('#txtSKU')

	const dataTableOptions = {
		destroy: true,
		language: {
			paginate: {
				first: "Primero",
				last: "Último",
				next: "Siguiente",
				previous: "Anterior"
			}
		}
	};

	const initDataTable = async () => {
		if (dataTableIsInitialized) {
			dataTable.destroy();
		}

		await listProd();


		dataTable = $("#tblproductos").DataTable(dataTableOptions);

		dataTableIsInitialized = true;
	};


	const parametros = {
		sku: sku.val(),
		nombre: nombre.val()
	};

	

	const listProd = async () => {
		try {

			const response = await fetch("http://localhost:5085/Producto/listarproductos", {
				method: 'POST', // o 'POST' según lo que necesites
				headers: {
					'Authorization': `Bearer ${token}`, // Agrega el token al encabezado 'Authorization'
					'Content-Type': 'application/json' // Si es necesario especificar el tipo de contenido
				},
				body: JSON.stringify(parametros)
			});

			if (!response.ok) {
				throw new Error(`Error en la solicitud: ${response.statusText}`);
			}

			const productos = await response.json();

			let content = ``;
			productos.forEach((pro, index) => {
				content += `
								<tr>
									<td>${index + 1}</td>
										<td>${pro.sku}</td>
										<td>${pro.nombre}</td>
											<td>${pro.tipo}</td>
										<td>${pro.etiqueta}</td>
											<td>${pro.precio}</td>
											<td>${pro.uni_medida}</td>
									<td><i class="fa-solid fa-check" style="color: green;"></i></td>
									<td>
										<button class="btn btn-sm btn-primary"><i class="fa-solid fa-pencil"></i></button>
										<button class="btn btn-sm btn-danger"><i class="fa-solid fa-trash-can"></i></button>
									</td>
								</tr>`;
			});


			$('#tblproductosbody').html(content);


		} catch (ex) {
			alert(ex);
		}
	};


	window.addEventListener("load", async () => {
		await initDataTable();
	});


</script>