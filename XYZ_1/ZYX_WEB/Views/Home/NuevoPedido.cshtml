<script src="~/lib/jquery/dist/jquery.min.js"></script>

<form>
    <div class="row">


        <input type="text" class="form-control" id="txtaccion" value="@ViewBag.accion" hidden>
        <input type="text" class="form-control" id="txtid_pedido" value="@ViewBag.id_pedido" hidden>
        <input type="text" class="form-control" id="txtestadoActual" val="0" hidden>

        <div class="col-md-4">
            <label for="inputState">Estado</label>
            <select class="form-control" id="cboEstado" disabled>
                <option value="1">Por Atender</option>
                <option value="2">En Proceso</option>
                <option value="3">Delivery</option>
                <option value="4">Recibido</option>
            </select>
        </div>


        <div class="col-md-4">
            <label for="inputEmail4">Fecha Pedido</label>
            <div class="input-group date" data-provide="datepicker" >
                <input type="text" class="form-control" id="txtfechapedido" disabled >
                <div class="input-group-addon">
                    <span class="glyphicon glyphicon-th"></span>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <label for="inputEmail4">Fecha recepcion</label>
            <div class="input-group date" data-provide="datepicker" >
                <input type="text" class="form-control" id="txtfecharecepcion" disabled>
                <div class="input-group-addon">
                    <span class="glyphicon glyphicon-th"></span>
                </div>
            </div>
        </div>


        <div class="col-md-4">
            <label for="inputEmail4">Fecha despacho</label>
            <div class="input-group date" data-provide="datepicker" >
                <input type="text" class="form-control" id="txtfechadespacho" disabled>
                <div class="input-group-addon">
                    <span class="glyphicon glyphicon-th"></span>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <label for="inputEmail4">Fecha Entrega</label>
            <div class="input-group date" data-provide="datepicker" >
                <input type="text" class="form-control" id="txtfechaentrega" disabled>
                <div class="input-group-addon">
                    <span class="glyphicon glyphicon-th"></span>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <label for="inputState">Vendedor</label>
            <select class="form-control" id="cboVendedor">
                <option value="1">Vendedor 1</option>
            </select>
        </div>

        <br />

        <div class="col-md-10">
            <label for="inputState">Producto</label>
            <select class="form-control" id="cboProductos">
            </select>
        </div>

        <div class="col-md-2" style="padding-top:2%">
            <button type="button" class="btn btn-primary" id="btnGuardarDet" onclick="guardarDet(1,0)" disabled>Agregar</button>
        </div>

        <div class="col-md-12" style="padding-top:2%">

        </div>

        <div class="col-md-12">
            <table id="tblpedidodet" class="table table-striped" style="width:100%">
                <thead>
                    <tr>
                        <th></th>
                        <th>Sku</th>
                        <th>Nombre</th>
                        <th>Tipo</th>
                        <th>Precio</th>
                        <th>Unidad Medida</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="tblpedidodetbody">
                </tbody>
            </table>

        </div>

    </div>

    <div class="col-md-12" style="padding-top:2%">
    </div>
    <hr />

    <button type="button" class="btn btn-primary" id="btnGuardarCab" onclick="guardar()">Guardar</button>
    <button type="button" class="btn btn-secundary"  onclick="location.href='@Url.Action("Pedidos", "Home")'">Regresar</button>


</form>



<script>

    const btnGuardarCab = $('#btnGuardarCab')
    const btnGuardarDet = $('#btnGuardarDet')
    const cboVendedor = $('#cboVendedor')
    const cboProductos = $('#cboProductos')
    const cboEstado = $('#cboEstado')
    const fechapedido = $('#txtfechapedido')
    const fecharecepcion = $('#txtfecharecepcion')
    const fechadespacho = $('#txtfechadespacho')
    const fechadentrega = $('#txtfechaentrega')
    const estadoActual = $('#txtestadoActual')
    const accion = $('#txtaccion')
    const id_pedido = $('#txtid_pedido')
    const token = localStorage.getItem('token');


    var fechaActual = new Date().toLocaleDateString('es-ES');
    fechapedido.val(fechaActual)


    var nuevaCab = {
        accion: parseInt(accion.val()),
        id_pedido: parseInt(id_pedido.val()),
        fecha: "",
        id_vendedor: cboVendedor.val(),
        id_estado: cboEstado.val(),
        n_pedido : "",
        request: ""
    };


    CargarDatos();
    CargarProductos();

    async function CargarDatos() {

        if (accion.val() == "2") 
        {
    
            cboEstado.prop("disabled", false);
            btnGuardarDet.prop("disabled", false);

            const parametros = {
                id_pedido: parseInt(id_pedido.val()),
            };

            try {
                const response = await fetch("http://localhost:5085/Pedido/obtenerpedido", {
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(parametros)
                });

                if (!response.ok) {
                    throw new Error(`Error en la solicitud: ${response.statusText}`);
                }

                const pedidos = await response.json();

                if (pedidos.length > 0) {

                    const pe = pedidos[0]; // Tomar el primer elemento de la lista

                    fechapedido.val(pe.fecha_pedido);
                    fecharecepcion.val(pe.fecha_recepcion);
                    fechadespacho.val(pe.fecha_despacho);
                    fechadentrega.val(pe.fecha_entrega);
                    id_pedido.val(pe.id_pedido);
                    estadoActual.val(pe.id_estado);
                    cboEstado.val(pe.id_estado);

                } else {
                    console.log('No se encontraron pedidos');
                }
            } catch (ex) {
                console.log(ex);
            }

            CargarDetalle();
        
        }
    
    }


    async function CargarProductos() {

            var parametros = {
                sku: "",
                nombre: ""
            };

            try {

                const response = await fetch("http://localhost:5085/Producto/listarproductos", {
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(parametros)
                });

                if (!response.ok) {
                    throw new Error(`Error en la solicitud: ${response.statusText}`);
                }

                const productos = await response.json();

                productos.forEach((pro, index) => {

                $(cboProductos).append($("<option></option>").attr("value", pro.id_producto).text(pro.nombre));

                });

            } catch (ex) {
                console.log(ex);
            }    

    }


    async function CargarDetalle() {

        var parametros = {
            id_pedido: parseInt(id_pedido.val()),
        };

        try {

            const response = await fetch("http://localhost:5085/Pedido/obtenerpedidodet", {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(parametros)
            });

            if (!response.ok) {
                throw new Error(`Error en la solicitud: ${response.statusText}`);
            }

            const productos = await response.json();

            let content = ``;
            productos.forEach((pro, index) => {
                content += `
                                    <tr>
                                        <td>${index + 1}</td>
                                            <td>${pro.sku}</td>
                                            <td>${pro.nombre}</td>
                                                <td>${pro.tipo}</td>
                                                <td>${pro.precio}</td>
                                                <td>${pro.uni_medida}</td>
                                        <td>
                                              <button  onclick="eliminarDetalle(${pro.id_pedido_det})" class="btn btn-sm btn-danger"><i class="fa-solid fa-trash-can"></i></button>
                                        </td>
                                    </tr>`;
            });


            $('#tblpedidodetbody').html(content);



        } catch (ex) {
            console.log(ex);
        }

    }


    async function guardar() {


        try {

            if (accion.val() == "2") 
            {

                if (parseInt(estadoActual.val()) >= parseInt(nuevaCab.id_estado)) {
                    alert("Estado inferior o igual al actual");
                    return null;
                }
            
            }


            const response = await fetch("http://localhost:5085/Pedido/insertpedido", {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(nuevaCab)
            });

            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(`Error en la solicitud: ${response.statusText}. Detalles: ${JSON.stringify(errorData)}`);
            }

            const pedidos = await response.json();
            console.log(pedidos);

            var url = '@Html.Raw(Url.Action("Pedidos", "Home"))';
            window.location.href = url;

        } catch (ex) {
            console.log(ex);
        }


    }

    async function guardarDet(accionx, id_pedido_detx) {

        var parametros = {
            accion: accionx,
            id_pedido: parseInt(id_pedido.val()),
            id_producto: cboProductos.val(),
            id_pedido_det: id_pedido_detx
        };

        try {

            const response = await fetch("http://localhost:5085/Pedido/insertpedidodet", {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(parametros)
            });

            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(`Error en la solicitud: ${response.statusText}. Detalles: ${JSON.stringify(errorData)}`);
            }

            const pedidos = await response.json();
            console.log(pedidos);

            var url = '@Html.Raw(Url.Action("NuevoPedido", "Home", new { accion = "__id__", id_pedido = "__ic__" }))';
            window.location.href = url.replace('__id__', 2).replace('__ic__', parseInt(id_pedido.val()));

        } catch (ex) {
            console.log(ex);
        }


    }

    function eliminarDetalle(id_pedido_det) 
    {
        guardarDet(3, id_pedido_det);
    }


    cboEstado.on('change', async () => {
        nuevaCab.id_estado = cboEstado.val();
        console.log(nuevaCab.id_estado)
    });


</script>